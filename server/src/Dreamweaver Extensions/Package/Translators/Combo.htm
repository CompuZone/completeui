<html>
<head>
<title>Nitobi ComboBox Tag Translator</title>
<meta http-equiv="Content-Type" content="text/html; charset=">
<script language="text/javascipt" src="../Shared/Nitobi/NitobiUtility.js"></script>
<script language="JavaScript">
var startTag = "<ntb:Combo>";
var endTag = "</ntb:Combo>"
var startPattern = new RegExp("<ntb:Comb" + "o", "i");
var endPattern = new RegExp("</ntb:Comb" + "o>", "i");
var DEFAULTWIDTH = "100px";
var DEFAULTLISTWIDTH = "150px";
var DEFAULTLISTHEIGHT = "150px";
var DEFAULTCOLUMNWIDTH = "50px";

function getTranslatorInfo()
{
	var translatorInfo = new Array(6);
	
	var expression = "<ntb:comb" + "o";
	translatorInfo[0] = "NTB_COMBO";
	translatorInfo[1] = "Nitobi Combo";
	translatorInfo[2] = "0";
	translatorInfo[3] = "1";
	translatorInfo[4] = expression;
	translatorInfo[5] = "byExpression";
	return translatorInfo;
}

function translateMarkup(docNameStr, siteRootStr, inStr)
{
	var outStr = "";
	var replCode = "";
	var start = inStr.search(startPattern);
	var end = inStr.search(endPattern);

	// If the string to translate is empty, do nothing.
	if (inStr.length <= 0)
	{
		return "";
	}
	
	while (start != -1)
	{
		outStr = inStr.substring(0,start);
		replCode = constructLockedMarkup(inStr.substring(start, end + endTag.length));
		outStr = outStr + replCode;
		outStr = outStr + inStr.substring(end + endTag.length);
		inStr = outStr;
		start = inStr.search(startPattern);
		end = inStr.search(endPattern);
	}
	return outStr;
}

function constructLockedMarkup(declaration)
{
	var startMarkup = "<MM:BeginLock translatorClass=\"NTB_COMBO\" type=\"ntb:combo\" orig=\"" + escape(declaration) + "\">";
	var endMarkup = "<" + "MM:EndLock>";
	
	var combo = nitobi.util.getTag(declaration, "ntb:Combo", 0);
	var textbox = nitobi.util.getTag(declaration, "ntb:ComboTextBox", 0);
	var list = nitobi.util.getTag(declaration, "ntb:ComboList", 0);
	var columns = nitobi.util.getTag(declaration, "ntb:ComboColumnDefinition");
	
	// Attributes
	var width;
	if (textbox)
	{
		width = nitobi.util.getAttribute(textbox, "Width");
	}
	var listWidth;
	var listHeight;
	if (list)
	{
		listWidth = nitobi.util.getAttribute(list, "Width");
		listHeight = nitobi.util.getAttribute(list, "Height");
	}
	var id = nitobi.util.getAttribute(combo, "id");
	
	// Translated markup
	var content = "";
	content += '<div class="outlook ntb-combobox-reset" style="height:22px;position:relative;">';
	content += '<div class="ntb-combobox-text-container" style="border-right:0px solid white;overflow:hidden;';
	content += 'width:' + (width?width:DEFAULTWIDTH) + '">';
	content += '<div class="ntb-combobox-text-moz" />';
	content += '</div>';
	content += '<span class="ntb-combobox-button">';
	content += '<div class="ntb-combobox-button-img"/>';
	content += '</span>';
	content += '<div style="clear:both;height:0px;width:auto;"></div>';
	content += '<div id="' + id + 'list" style="overflow:hidden; display:none; border:1px solid black; position:absolute;background-color:#EEEEEE;';
	content += 'width:' + (listWidth?listWidth:DEFAULTLISTWIDTH) + ';';
	content += 'height:' + (listHeight?listHeight:DEFAULTLISTHEIGHT) + ';';
	content += 'bottom:-' + (listHeight?parseInt(listHeight) + 2 + "px":parseInt(DEFAULTLISTHEIGHT) + 2 + "px") + ';';
	content += '">';
	content += '<table border="0" cellpadding="0" cellspacing="0" class="ntb-combobox-list-header">';
	content += '<tbody>';
	content += '<tr class="ntb-combobox-column-labels">';
	if (columns && nitobi.util.getDWVersion() == "9" || columns && nitobi.util.getDWVersion() == "10")
	{
		for (var i = 0; i < columns.length; i++)
		{
			var column = columns[i];
			var width = nitobi.util.getAttribute(column, "Width");
			var label = nitobi.util.getAttribute(column, "HeaderLabel");
			content += '<td class="ntb-combobox-column-label" style="';
			content += 'width:' + (width?width:DEFAULTCOLUMNWIDTH) + ';">';
			content += (label?label:'&nbsp;') + '</td>';
		}
	}
	content += '</tr></tbody></table></div></div>';
	return startMarkup + content + endMarkup;
}
</script>
</head>
<body>
</body>
</html>