/*
 * Nitobi Complete UI 1.0
 * Copyright(c) 2009, Nitobi
 * support@nitobi.com
 * 
 * http://www.nitobi.com/license
 */

// *****************************************************************************
// *****************************************************************************
// * nitobi.ui.Toolbar
// *****************************************************************************
/// <class name='nitobi.ui.Toolbar'>
/// <summary>

/// </summary>

nitobi.ui.DropDownXsl = 

	"<xsl:template match=\"//dropdown\">" +
		"<select class=\"ntb-dropdown\" >" + 
			 "<xsl:attribute name=\"id\" >"+
            		"<xsl:value-of select=\"@id\" />"+
         		"</xsl:attribute>"+
        "<xsl:attribute name=\"style\">"+
				"<xsl:choose>"+
					"<xsl:when test=\"../../@height\">"+
						"<xsl:value-of select=\"concat('float:left;width:50px;height:',../../@height - 1,'px')\" />"+
					"</xsl:when>"+
						"<xsl:otherwise>"+
							"<xsl:value-of select=\"concat('float:left;width:',@width,'px;height:',@height,'px')\" />"+
						"</xsl:otherwise>"+
					"</xsl:choose>" + 
	         "</xsl:attribute>"+
  "<xsl:attribute name=\"onchange\">"+
				// The following line is var e='@onclick_event';eval(this.OnClickHandler(e)); generated by EbaConstructValidXpathQuery
				// e.g. writeLog(EbaConstructValidXpathQuery("var e='X';eval(this.object.OnClickHandler(e));")); and then replace X with @onclick_event
	            "<xsl:value-of select=\"concat('var e = this.value;', 'this.object.onChangeHandler(e);')\" />"+
	         "</xsl:attribute>"+

			"<option value=\"10\">10</option>" +
			"<option value=\"15\">15</option>" +
			"<option value=\"20\">20</option>" +
			"<option value=\"25\">25</option>" +
			"<option value=\"50\">50</option>" + 
		"</select>" + 
	"</xsl:template>";

nitobi.ui.DropDown = function (xml, id)
{
	this.initialize(xml, nitobi.ui.DropDownXsl,id);
	this.enable();
}


nitobi.lang.extend(nitobi.ui.DropDown, nitobi.ui.InteractiveUiElement);


nitobi.ui.DropDown.prototype.onChangeHandler = function(value)
{
	var grid = this.toolbar.grid;
	grid.setRowsPerPage(value);
	grid.bind();
}

nitobi.ui.DropDown.prototype.disable = function()
{
	nitobi.ui.DropDown.base.disable.call(this);
}

nitobi.ui.DropDown.prototype.enable = function()
{
	nitobi.ui.DropDown.base.enable.call(this);
}

nitobi.ui.DropDown.prototype.dispose = function()
{
	nitobi.ui.DropDown.base.dispose.call(this);
}
